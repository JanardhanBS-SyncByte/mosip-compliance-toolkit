[
	{
		"testCaseType": "ABIS",
		"testName": "Insert one person\"s biomterics in ABIS",
		"testId": "ABIS3000",
		"specVersion": "0.9.0",
		"testDescription": "Insert one person\"s biomterics in ABIS",
		"isNegativeTestcase": false,
		"methodName": [
			"insert"
		],
		"requestSchema": [
			"InsertRequestSchema"
		],
		"responseSchema": [
			"InsertResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"bulkInsert": false,
			"insertCount": "1"
		}
	},
	{
		"testCaseType": "ABIS",
		"testName": "Insert two person\"s biomterics in ABIS",
		"testId": "ABIS3001",
		"specVersion": "0.9.0",
		"testDescription": "Insert two person\"s biomterics in ABIS",
		"isNegativeTestcase": false,
		"methodName": [
			"insert"
		],
		"requestSchema": [
			"InsertRequestSchema"
		],
		"responseSchema": [
			"InsertResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"bulkInsert": true,
			"insertCount": "2"
		}
	},
	{
		"testCaseType": "ABIS",
		"testName": "Invalid insert request structure",
		"testId": "ABIS3002",
		"specVersion": "0.9.0",
		"testDescription": "Invalid insert request - request json structure is invalid",
		"isNegativeTestcase": false,
		"methodName": [
			"insert"
		],
		"requestSchema": [
			"InsertInvalidRequestSchema"
		],
		"responseSchema": [
			"InsertResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"bulkInsert": false,
			"insertCount": "1",
			"invalidRequestAttribute": "all"
		}
	},
	{
		"testCaseType": "ABIS",
		"testName": "Invalid insert request - missing referenceId",
		"testId": "ABIS3003",
		"specVersion": "0.9.0",
		"testDescription": "Invalid insert request - missing referenceId",
		"isNegativeTestcase": false,
		"methodName": [
			"insert"
		],
		"requestSchema": [
			"InsertInvalidRequestSchema"
		],
		"responseSchema": [
			"InsertResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"bulkInsert": false,
			"insertCount": "1",
			"invalidRequestAttribute": "referenceId"
		}
	},
	{
		"testCaseType": "ABIS",
		"testName": "Invalid insert request - missing requestId",
		"testId": "ABIS3004",
		"specVersion": "0.9.0",
		"testDescription": "Invalid insert request - missing requestId",
		"isNegativeTestcase": false,
		"methodName": [
			"insert"
		],
		"requestSchema": [
			"InsertInvalidRequestSchema"
		],
		"responseSchema": [
			"InsertResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"bulkInsert": false,
			"insertCount": "1",
			"invalidRequestAttribute": "requestId"
		}
	},
	{
		"testCaseType": "ABIS",
		"testName": "Identify - duplicate found for the referenceId against gallery",
		"testId": "ABIS3018",
		"specVersion": "0.9.0",
		"testDescription": "Insert same biometrics twice, then test if duplicate is found for the referenceId against gallery",
		"isNegativeTestcase": false,
		"methodName": [
			"insert",
			"identify"
		],
		"requestSchema": [
			"InsertRequestSchema",
			"IdentifyRequestSchema"
		],
		"responseSchema": [
			"InsertResponseSchema",
			"IdentifyResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			],
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "IdentifyDuplicateFoundValidator",
					"description": "Validates the count of duplicates found by ABIS for the given referenceId"
				}
			]
		],
		"otherAttributes": {
			"bulkInsert": true,
			"insertCount": "5",
			"expectedDuplicateCount": "4",
			"identifyReferenceId": "ABIS3018_1",
			"identifyGalleryIds": [
				"ABIS3018_1",
				"ABIS3018_2",
				"ABIS3018_3",
				"ABIS3018_4",
				"ABIS3018_5"
			]
		}
	},
	{
		"testCaseType": "ABIS",
		"testName": "Identify - duplicate found for the referenceId",
		"testId": "ABIS3026",
		"specVersion": "0.9.0",
		"testDescription": "Insert same biometrics twice, then test if duplicate is found for the referenceId",
		"isNegativeTestcase": false,
		"methodName": [
			"insert",
			"identify"
		],
		"requestSchema": [
			"InsertRequestSchema",
			"IdentifyRequestSchema"
		],
		"responseSchema": [
			"InsertResponseSchema",
			"IdentifyResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			],
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "IdentifyDuplicateFoundValidator",
					"description": "Validates the count of duplicates found by ABIS for the given referenceId"
				}
			]
		],
		"otherAttributes": {
			"bulkInsert": true,
			"insertCount": "2",
			"expectedDuplicateCount": "1",
			"identifyReferenceId": "ABIS3026_2"
		}
	}
]