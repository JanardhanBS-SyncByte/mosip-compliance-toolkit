[
	{
		"testCaseType": "SBI",
		"testName": "Discover device",
		"testId": "SBI1000",
		"specVersion": "0.9.5",
		"testDescription": "This testcase will perform device discovery for the selected device.",
		"isNegativeTestcase": false,
		"methodName": [
			"device"
		],
		"requestSchema": [
			"DiscoverRequestSchema"
		],
		"responseSchema": [
			"DiscoverResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration",
				"Auth"
			],
			"biometricTypes": [
				"Finger",
				"Iris",
				"Face"
			],
			"deviceSubTypes": [
				"Slap",
				"Single",
				"Double",
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "",
			"bioCount": "",
			"deviceSubId": ""
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Device Info",
		"testId": "SBI1001",
		"specVersion": "0.9.5",
		"testDescription": "This testcase will validate the device info for the selected device including trust validation.",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration",
				"Auth"
			],
			"biometricTypes": [
				"Finger",
				"Iris",
				"Face"
			],
			"deviceSubTypes": [
				"Slap",
				"Single",
				"Double",
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "",
			"bioCount": "",
			"deviceSubId": ""
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Left Slap",
		"testId": "SBI1002",
		"specVersion": "0.9.5",
		"testDescription": "This testcase is to check if Registration Capture for Left Slap from the device is valid or not.",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Left Slap - One Exception",
		"testId": "SBI1003",
		"specVersion": "0.9.5",
		"testDescription": "1. This testcase is to check if Registration Capture for Left Slap from the device is valid or not.<br> 2. Please place your left slap <b>except left ring finger</b> on the device. ",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftLittle"
			],
			"exceptions": [
				"LeftRing"
			],
			"requestedScore": "40",
			"bioCount": "3",
			"deviceSubId": "1"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Right Slap",
		"testId": "SBI1004",
		"specVersion": "0.9.5",
		"testDescription": "Valid Registration capture Request for Slap scanner type",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Right Slap - Two Exception",
		"testId": "SBI1005",
		"specVersion": "0.9.5",
		"testDescription": "Valid Registration capture Request for slap device type with right slap except right ring finger and right little finger",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightRing",
				"RightLittle"
			],
			"exceptions": [
				"RightIndex",
				"RightMiddle"
			],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "2"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Two Thumbs",
		"testId": "SBI1006",
		"specVersion": "0.9.5",
		"testDescription": "Valid Registration capture Request for Slap scanner type",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightThumb",
				"LeftThumb"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Two Thumbs - One Exception",
		"testId": "SBI1007",
		"specVersion": "0.9.5",
		"testDescription": "Valid Registration capture Request for slap device type with two thumbs except left thumb finger",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightThumb"
			],
			"exceptions": [
				"LeftThumb"
			],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Two Thumbs - Both Exception",
		"testId": "SBI1008",
		"specVersion": "0.9.5",
		"testDescription": "Valid Registration capture Request for slap device type with two thumbs except right thumb finger and left thumb finger ",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [],
			"exceptions": [
				"RightThumb",
				"LeftThumb"
			],
			"requestedScore": "40",
			"bioCount": "0",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Double Iris",
		"testId": "SBI1009",
		"specVersion": "0.9.5",
		"testDescription": "Valid Registration capture Request",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Double Iris - One Exception",
		"testId": "SBI1010",
		"specVersion": "0.9.5",
		"testDescription": "Valid Registration capture Request for Double iris device type except left iris ",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Right"
			],
			"exceptions": [
				"Left"
			],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Double Iris - Both Exception",
		"testId": "SBI1011",
		"specVersion": "0.9.5",
		"testDescription": "Valid Registration capture Request for Double iris device type except left iris and right iris ",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [],
			"exceptions": [
				"Left",
				"Right"
			],
			"requestedScore": "40",
			"bioCount": "0",
			"deviceSubId": "3"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Face",
		"testId": "SBI1012",
		"specVersion": "0.9.5",
		"testDescription": "Valid Registration capture Request only for Face",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Exception Photo",
		"testId": "SBI1013",
		"specVersion": "0.9.5",
		"testDescription": "Valid Registration capture Request for Face device type exception value left little finger or any will give Exception photo ",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [
				"LeftLittle"
			],
			"requestedScore": "10",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Face",
		"testId": "SBI1014",
		"specVersion": "0.9.5",
		"testDescription": "Valid Auth capture Request only for Face",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Single Iris - Unknown Iris",
		"testId": "SBI1015",
		"specVersion": "0.9.5",
		"testDescription": "Valid Auth capture Request for Unknown iris",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Single Iris - Left Iris",
		"testId": "SBI1016",
		"specVersion": "0.9.5",
		"testDescription": "Valid Auth capture Request for Left iris",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Left"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Single Iris - Right Iris",
		"testId": "SBI1017",
		"specVersion": "0.9.5",
		"testDescription": "Valid Auth capture Request for Right iris",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Unknown Finger",
		"testId": "SBI1018",
		"specVersion": "0.9.5",
		"testDescription": "Valid Auth capture Request for Unknown Finger",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture -Two Unknown Finger",
		"testId": "SBI1019",
		"specVersion": "0.9.5",
		"testDescription": "Valid Auth capture Request for Two Unknown Finger",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN",
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - LeftIndex Finger",
		"testId": "SBI1020",
		"specVersion": "0.9.5",
		"testDescription": "Valid Auth capture Request for LeftIndex Finger",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"LeftIndex"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Two Finger",
		"testId": "SBI1021",
		"specVersion": "0.9.5",
		"testDescription": "Valid Auth capture Request for Two Finger",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture -Key Rotation - Left Slap",
		"testId": "SBI1022",
		"specVersion": "0.9.5",
		"testDescription": "Key Rotation Registration capture Request for Slap scanner",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "RCaptureKeyRotationValidator",
					"description": "RCapture Key Rotation Validator"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture -Key Rotation - Single Iris - Left Iris",
		"testId": "SBI1023",
		"specVersion": "0.9.5",
		"testDescription": "Valid Auth capture Key Rotation Request for Left iris",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "KeyRotationValidator",
					"description": "Key Rotation Validator"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"Left"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture -Key Rotation - LeftIndex Finger",
		"testId": "SBI1024",
		"specVersion": "0.9.5",
		"testDescription": "Key Rotation Auth capture Request for LeftIndex Finger",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "KeyRotationValidator",
					"description": "Key Rotation Validator"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"LeftIndex"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Face",
		"testId": "SBI1025",
		"specVersion": "0.9.5",
		"testDescription": "Valid Auth capture Request only for Face",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "KeyRotationValidator",
					"description": "Key Rotation Validator"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Device Info - Ready",
		"testId": "SBI1026",
		"specVersion": "0.9.5",
		"testDescription": "Valid DeviceInfo Ready Status",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoReadyResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration",
				"Auth"
			],
			"biometricTypes": [
				"Finger",
				"Iris",
				"Face"
			],
			"deviceSubTypes": [
				"Slap",
				"Single",
				"Double",
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "",
			"bioCount": "",
			"deviceSubId": ""
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Check Device Status - Busy",
		"testId": "SBI1027",
		"specVersion": "0.9.5",
		"testDescription": "Checks the device to test for <b>Busy</b> status. <br>Initiate Busy status by invoking appropriate API, then click on <b>Resume</b> button.<br> After testcase execution is done, revert the device status and click on <b>Resume Next</b> button.",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoBusyResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration",
				"Auth"
			],
			"biometricTypes": [
				"Finger",
				"Iris",
				"Face"
			],
			"deviceSubTypes": [
				"Slap",
				"Single",
				"Double",
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "",
			"bioCount": "",
			"deviceSubId": "",
			"resumeBtn": true,
			"resumeAgainBtn": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Check Device Status - Not Ready",
		"testId": "SBI1028",
		"specVersion": "0.9.5",
		"testDescription": "Disconnect the device to test for <b>Not Ready</b> status. <br> Once disconnected , click on <b>Resume</b> button.<br> After testcase execution is done, re-connect the device and click on <b>Resume Next</b> button.",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoNotReadyResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration",
				"Auth"
			],
			"biometricTypes": [
				"Finger",
				"Iris",
				"Face"
			],
			"deviceSubTypes": [
				"Slap",
				"Single",
				"Double",
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "",
			"bioCount": "",
			"deviceSubId": "",
			"resumeBtn": true,
			"resumeAgainBtn": true
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Check Device Status - Not Registered",
		"testId": "SBI1029",
		"specVersion": "0.9.5",
		"testDescription": "Valid DeviceInfo Not Registered Status",
		"isNegativeTestcase": false,
		"methodName": [
			"info"
		],
		"requestSchema": [
			"DeviceInfoRequestSchema"
		],
		"responseSchema": [
			"DeviceInfoNotRegisteredResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration",
				"Auth"
			],
			"biometricTypes": [
				"Finger",
				"Iris",
				"Face"
			],
			"deviceSubTypes": [
				"Slap",
				"Single",
				"Double",
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "",
			"bioCount": "",
			"deviceSubId": ""
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Bio count - Mismatch",
		"testId": "SBI1030",
		"specVersion": "0.9.5",
		"testDescription": "Bio Count mismatch auth capture request for Finger",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "11",
			"deviceSubId": "0",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Bio count - Mismatch",
		"testId": "SBI1031",
		"specVersion": "0.9.5",
		"testDescription": "Bio Count mismatch auth capture request for Iris",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "3",
			"deviceSubId": "0",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Bio count - Mismatch",
		"testId": "SBI1032",
		"specVersion": "0.9.5",
		"testDescription": "Bio Count mismatch auth capture request for face",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "0",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Left Slap - Bio count - Mismatch",
		"testId": "SBI1033",
		"specVersion": "0.9.5",
		"testDescription": "Bio Count mismatch registration capture request for Finger Left Slap",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "5",
			"deviceSubId": "1",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Right Slap - Bio count - Mismatch",
		"testId": "SBI1034",
		"specVersion": "0.9.5",
		"testDescription": "Bio Count mismatch registration capture request for Finger Right Slap",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "5",
			"deviceSubId": "2",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Two Thumbs - Bio count - Mismatch",
		"testId": "SBI1035",
		"specVersion": "0.9.5",
		"testDescription": "Bio Count mismatch registration capture request for Finger Two Thumbs",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "3",
			"deviceSubId": "3",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Left - Bio count - Mismatch",
		"testId": "SBI1036",
		"specVersion": "0.9.5",
		"testDescription": "Bio Count mismatch registration capture request for Left Iris",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "1",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Right - Bio count - Mismatch",
		"testId": "SBI1037",
		"specVersion": "0.9.5",
		"testDescription": "Bio Count mismatch registration capture request for Right Iris",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "2",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Both Iris - Bio count - Mismatch",
		"testId": "SBI1038",
		"specVersion": "0.9.5",
		"testDescription": "Bio Count mismatch registration capture request for Both iris",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "3",
			"deviceSubId": "3",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Bio count - Mismatch",
		"testId": "SBI1039",
		"specVersion": "0.9.5",
		"testDescription": "Bio Count mismatch registration capture request for face",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"ErrorCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "0",
			"modalities": []
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Registration capture - Face - Timeout",
		"testId": "SBI1040",
		"specVersion": "0.9.5",
		"testDescription": "Timeout validation for registration capture request for face",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"ErrorCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				},{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"timeout": "500"
		}
	},{
		"testCaseType": "SBI",
		"testName": "Registration capture - Double Iris - Timeout",
		"testId": "SBI1041",
		"specVersion": "0.9.5",
		"testDescription": "Timeout validation for registration capture request for double iris",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				},{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Double"
			],
			"segments": [
				"Left",
				"Right"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3",
			"timeout": "500"
		}
	},{
		"testCaseType": "SBI",
		"testName": "Registration capture - Left Slap - Timeout",
		"testId": "SBI1042",
		"specVersion": "0.9.5",
		"testDescription": "Timeout validation for registration capture request for Left Slap",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				},{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"LeftIndex",
				"LeftMiddle",
				"LeftRing",
				"LeftLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "1",
			"timeout": "500"
		}
	},{
		"testCaseType": "SBI",
		"testName": "Registration capture - Right Slap - Timeout",
		"testId": "SBI1043",
		"specVersion": "0.9.5",
		"testDescription": "Timeout validation for registration capture request for Right Slap",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				},{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightIndex",
				"RightMiddle",
				"RightRing",
				"RightLittle"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "4",
			"deviceSubId": "2",
			"timeout": "500"
		}
	},{
		"testCaseType": "SBI",
		"testName": "Registration capture - Two Thumbs - Timeout",
		"testId": "SBI1044",
		"specVersion": "0.9.5",
		"testDescription": "Timeout validation for registration capture request for Two Thumbs",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				},{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Slap"
			],
			"segments": [
				"RightThumb",
				"LeftThumb"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "2",
			"deviceSubId": "3",
			"timeout": "500"
		}
	},{
		"testCaseType": "SBI",
		"testName": "Registration capture - Exception Photo - Timeout",
		"testId": "SBI1045",
		"specVersion": "0.9.5",
		"testDescription": "Timeout validation for Face device type exception value left little finger or any will give Exception photo ",
		"isNegativeTestcase": false,
		"methodName": [
			"rcapture"
		],
		"requestSchema": [
			"RegistrationCaptureRequestSchema"
		],
		"responseSchema": [
			"RegistrationCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				},{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Registration"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [
				"LeftLittle"
			],
			"requestedScore": "10",
			"bioCount": "1",
			"deviceSubId": "0",
			"timeout": "500"
		}
	},{
		"testCaseType": "SBI",
		"testName": "Auth capture - Face - Timeout",
		"testId": "SBI1046",
		"specVersion": "0.9.5",
		"testDescription": "Timeout validation for Auth capture Request only for Face",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				},{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Face"
			],
			"deviceSubTypes": [
				"Full face"
			],
			"segments": [],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"timeout": "500"
		}
	},
	{
		"testCaseType": "SBI",
		"testName": "Auth capture - Single Iris - Unknown Iris - Timeout",
		"testId": "SBI1047",
		"specVersion": "0.9.5",
		"testDescription": "Timeout validation for Auth capture Request for Unknown iris",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				},{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Iris"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"timeout": "500"
		}
	},{
		"testCaseType": "SBI",
		"testName": "Auth capture - Unknown Finger - Timeout",
		"testId": "SBI1048",
		"specVersion": "0.9.5",
		"testDescription": "Timeout validation for Auth capture Request for Unknown Finger",
		"isNegativeTestcase": false,
		"methodName": [
			"capture"
		],
		"requestSchema": [
			"AuthCaptureRequestSchema"
		],
		"responseSchema": [
			"AuthCaptureResponseSchema"
		],
		"validatorDefs": [
			[
				{
					"name": "SchemaValidator",
					"description": "Validates if response has all mandatory attributes and they have allowed values"
				},
				{
					"name": "SignatureValidator",
					"description": "Validates if response signature is valid or not"
				},{
					"name": "TimeoutValidator",
					"description": "Validates if response is received within the given timeout period or not"
				}
			]
		],
		"otherAttributes": {
			"purpose": [
				"Auth"
			],
			"biometricTypes": [
				"Finger"
			],
			"deviceSubTypes": [
				"Single"
			],
			"segments": [
				"UNKNOWN"
			],
			"exceptions": [],
			"requestedScore": "40",
			"bioCount": "1",
			"deviceSubId": "0",
			"timeout": "500"
		}
	}
]