[
	{
		"testCaseType": "SDK",
		"testName": "Init Test",
		"testId": "SDK2000",
		"specVersion": "0.9.0",
		"testDescription": "Initialise Bio SDK Services",
		"isNegativeTestcase": false,
		"methodName": "init",
		"requestSchema": "InitSDKRequestSchema",
		"responseSchema": "InitSDKResponseSchema",
		"validatorDefs": [
			{
				"name": "SchemaValidator",
				"description": "Validates if response has all mandatory attributes and they have allowed values"
			}
		],
		"otherAttributes": {
			"modalities": [
				"finger",
				"face",
				"iris"
			],
			"sdkPurpose": [
				"Check Quality",
				"Matcher",
				"Extract Template",
				"Convert Format",
				"Segment"
			]
		}
	},
	{
		"testCaseType": "SDK",
		"testName": "Good face quality",
		"testId": "SDK2001",
		"testDescription": "Good face quality",
		"specVersion": "0.9.0",
		"isNegativeTestcase": false,
		"methodName": "check-quality",
		"requestSchema": "CheckQualityRequestSchema",
		"responseSchema": "CheckQualityResponseSchema",
		"validatorDefs": [
			{
				"name": "SchemaValidator",
				"description": "Validates if response has all mandatory attributes and they have allowed values"
			},
			{
				"name": "QualityCheckValidator",
				"description": "Checks the quality score of the modality"
			}
		],
		"otherAttributes": {
			"modalities": [
				"face"
			],
			"sdkPurpose": [
				"Check Quality"
			]
		}
	},
	{
		"testCaseType": "SDK",
		"testName": "Bad face quality",
		"testId": "SDK2002",
		"testDescription": "Bad face quality",
		"specVersion": "0.9.0",
		"isNegativeTestcase": true,
		"methodName": "check-quality",
		"requestSchema": "CheckQualityRequestSchema",
		"responseSchema": "CheckQualityResponseSchema",
		"validatorDefs": [
			{
				"name": "SchemaValidator",
				"description": "Validates if response has all mandatory attributes and they have allowed values"
			},
			{
				"name": "QualityCheckValidator",
				"description": "Checks the quality score of the modality"
			}
		],
		"otherAttributes": {
			"modalities": [
				"face"
			],
			"sdkPurpose": [
				"Check Quality"
			]
		}
	},
	{
		"testCaseType": "SDK",
		"testName": "Invalid face data for quality check",
		"testId": "SDK2003",
		"testDescription": "Invalid face data for quality check",
		"specVersion": "0.9.0",
		"isNegativeTestcase": false,
		"methodName": "check-quality",
		"requestSchema": "CheckQualityRequestSchema",
		"responseSchema": "CheckQualityResponseSchema",
		"validatorDefs": [
			{
				"name": "SchemaValidator",
				"description": "Validates if response has all mandatory attributes and they have allowed values"
			},
			{
				"name": "QualityCheckInvalidDataValidator",
				"description": "Validates the status code for invalid data"
			}
		],
		"otherAttributes": {
			"modalities": [
				"face"
			],
			"sdkPurpose": [
				"Check Quality"
			]
		}
	},
	{
		"testCaseType": "SDK",
		"testName": "No face data for quality check",
		"testId": "SDK2004",
		"testDescription": "No face data for quality check",
		"specVersion": "0.9.0",
		"isNegativeTestcase": false,
		"methodName": "check-quality",
		"requestSchema": "CheckQualityRequestSchema",
		"responseSchema": "CheckQualityResponseSchema",
		"validatorDefs": [
			{
				"name": "SchemaValidator",
				"description": "Validates if response has all mandatory attributes and they have allowed values"
			},
			{
				"name": "QualityCheckNoDataValidator",
				"description": "Validates the status code for no data"
			}
		],
		"otherAttributes": {
			"modalities": [
				"face"
			],
			"sdkPurpose": [
				"Check Quality"
			]
		}
	},
	{
		"testCaseType": "SDK",
		"testName": "Face match success",
		"testId": "SDK2005",
		"testDescription": "Face match success",
		"specVersion": "0.9.0",
		"isNegativeTestcase": false,
		"methodName": "match",
		"requestSchema": "MatchRequestSchema",
		"responseSchema": "MatchResponseSchema",
		"validatorDefs": [
			{
				"name": "SchemaValidator",
				"description": "Validates if response has all mandatory attributes and they have allowed values"
			},
			{
				"name": "MatchValidator",
				"description": "Validates if biomterics match for the modality"
			}
		],
		"otherAttributes": {
			"modalities": [
				"face"
			],
			"sdkPurpose": [
				"Matcher"
			]
		}
	},
	{
		"testCaseType": "SDK",
		"testName": "Face match failure",
		"testId": "SDK2006",
		"testDescription": "Face match failure",
		"specVersion": "0.9.0",
		"isNegativeTestcase": true,
		"methodName": "match",
		"requestSchema": "MatchRequestSchema",
		"responseSchema": "MatchResponseSchema",
		"validatorDefs": [
			{
				"name": "SchemaValidator",
				"description": "Validates if response has all mandatory attributes and they have allowed values"
			},
			{
				"name": "MatchValidator",
				"description": "Validates if biomterics match for the modality"
			}
		],
		"otherAttributes": {
			"modalities": [
				"face"
			],
			"sdkPurpose": [
				"Matcher"
			]
		}
	},
	{
		"testCaseType": "SDK",
		"testName": "Invalid face data for match",
		"testId": "SDK2007",
		"testDescription": "Invalid face data for match",
		"specVersion": "0.9.0",
		"isNegativeTestcase": false,
		"methodName": "match",
		"requestSchema": "MatchRequestSchema",
		"responseSchema": "MatchResponseSchema",
		"validatorDefs": [
			{
				"name": "SchemaValidator",
				"description": "Validates if response has all mandatory attributes and they have allowed values"
			},
			{
				"name": "MatchInvalidDataValidator",
				"description": "Validates the status code for invalid data"
			}
		],
		"otherAttributes": {
			"modalities": [
				"face"
			],
			"sdkPurpose": [
				"Matcher"
			]
		}
	},
	{
		"testCaseType": "SDK",
		"testName": "No face data for match",
		"testId": "SDK2008",
		"testDescription": "No face data for match",
		"specVersion": "0.9.0",
		"isNegativeTestcase": false,
		"methodName": "match",
		"requestSchema": "MatchRequestSchema",
		"responseSchema": "MatchResponseSchema",
		"validatorDefs": [
			{
				"name": "SchemaValidator",
				"description": "Validates if response has all mandatory attributes and they have allowed values"
			},
			{
				"name": "MatchNoDataValidator",
				"description": "Validates the status code for no data"
			}
		],
		"otherAttributes": {
			"modalities": [
				"face"
			],
			"sdkPurpose": [
				"Matcher"
			]
		}
	},
	{
		"testCaseType": "SDK",
		"testName": "Face match against more than one face",
		"testId": "SDK2009",
		"testDescription": "Face match against more than one face",
		"specVersion": "0.9.0",
		"isNegativeTestcase": false,
		"methodName": "match",
		"requestSchema": "MatchRequestSchema",
		"responseSchema": "MatchResponseSchema",
		"validatorDefs": [
			{
				"name": "SchemaValidator",
				"description": "Validates if response has all mandatory attributes and they have allowed values"
			},
			{
				"name": "MatchValidator",
				"description": "Validates if biomterics match for the modality"
			}
		],
		"otherAttributes": {
			"modalities": [
				"face"
			],
			"sdkPurpose": [
				"Matcher"
			]
		}
	},
	{
		"testCaseType": "SDK",
		"testName": "Face extract invalid data failure",
		"testId": "SDK2045",
		"testDescription": "Face extract invalid data failure",
		"specVersion": "0.9.0",
		"isNegativeTestcase": true,
		"methodName": "extract-template",
		"requestSchema": "ExtractTemplateRequestSchema",
		"responseSchema": "ExtractTemplateResponseSchema",
		"validatorDefs": [
			{
				"name": "SchemaValidator",
				"description": "Validates if response has all mandatory attributes and they have allowed values"
			},
			{
				"name": "ExtractTemplateInvalidDataValidator",
				"description": "Validates if input BDB data present in the Probe for the modality is valid"
			}
		],
		"otherAttributes": {
			"modalities": [
				"face"
			],
			"sdkPurpose": [
				"Extract Template"
			]
		}
	},
	{
		"testCaseType": "SDK",
		"testName": "Face extract no input failure",
		"testId": "SDK2048",
		"testDescription": "Face extract no input failure",
		"specVersion": "0.9.0",
		"isNegativeTestcase": true,
		"methodName": "extract-template",
		"requestSchema": "ExtractTemplateRequestSchema",
		"responseSchema": "ExtractTemplateResponseSchema",
		"validatorDefs": [
			{
				"name": "SchemaValidator",
				"description": "Validates if response has all mandatory attributes and they have allowed values"
			},
			{
				"name": "ExtractTemplateNoInputDataValidator",
				"description": "Validates if no input BDB data present in the Probe"
			}
		],
		"otherAttributes": {
			"modalities": [
				"face"
			],
			"sdkPurpose": [
				"Extract Template"
			]
		}
	},
	{
		"testCaseType": "SDK",
		"testId": "SDK2060",
		"specVersion": "0.9.0",
		"testName": "Face segment invalid data failure",
		"testDescription": "Face segment invalid data failure",
		"methodName": "segment",
		"requestSchema": "SegmentRequestSchema",
		"responseSchema": "SegmentResponseSchema",
		"validatorDefs": [
			{
				"name": "SchemaValidator",
				"description": "Validates if response has all mandatory attributes and they have allowed values"
			},
			{
				"name": "SegmentInvalidDataValidator",
				"description": "Validates if input BDB data present in the Probe for the modality is valid"
			}
		],
		"otherAttributes": {
			"modalities": [
				"face"
			],
			"sdkPurpose": [
				"Segment"
			]
		},
		"isNegativeTestcase": true
	},
	{
		"testCaseType": "SDK",
		"testId": "SDK2063",
		"specVersion": "0.9.0",
		"testName": "Face segment no input failure",
		"testDescription": "Face segment no input failure",
		"methodName": "segment",
		"requestSchema": "SegmentRequestSchema",
		"responseSchema": "SegmentResponseSchema",
		"validatorDefs": [
			{
				"name": "SchemaValidator",
				"description": "Validates if response has all mandatory attributes and they have allowed values"
			},
			{
				"name": "SegmentNoInputDataValidator",
				"description": "Validates if no input BDB data present in the Probe"
			}
		],
		"otherAttributes": {
			"modalities": [
				"face"
			],
			"sdkPurpose": [
				"Segment"
			]
		},
		"isNegativeTestcase": true
	}
	
	
]